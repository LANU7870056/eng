<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
 
<script>
const wordDatabase = [
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>英文單字測驗</title>
<script>
const wordDatabase = [
{ en: "soldier", zh: "士兵"},
{ en: "grow up", zh: "長大"},
{ en: "report", zh: "報導"},
{ en: "depend", zh: "依賴"},
{ en: "protect", zh: "保衛"},
{ en: "refund", zh: "退還"},
{ en: "behavior", zh: "行為"},
{ en: "apologize", zh: "道歉"},
{ en: "trust", zh: "信任"},
{ en: "identify", zh: "辨識"},
{ en: "mention", zh: "提及"},
{ en: "direct", zh: "直接的"},
{ en: "longitude", zh: "經度"},
{ en: "experience", zh: "經驗"},
{ en: "climate", zh: "氣候"},
{ en: "deep", zh: "深的"},
{ en: "jump", zh: "跳"},
{ en: "cottage", zh: "小屋"},
{ en: "breath", zh: "呼吸"},
{ en: "industry", zh: "產業"},
{ en: "headline", zh: "標題"},
{ en: "important", zh: "重要的"},
{ en: "passage", zh: "一段文章"},
{ en: "false", zh: "錯誤的"},
{ en: "clothes", zh: "衣服"},
{ en: "manners", zh: "規矩"},
{ en: "honesty", zh: "誠實"},
{ en: "comfort", zh: "舒適"},
{ en: "famous", zh: "著名的"},
{ en: "emptiness", zh: "空虛"},
{ en: "peace", zh: "和平"},
{ en: "rid", zh: "擺脫"},
{ en: "discount", zh: "折扣"},
{ en: "translation", zh: "翻譯"},
{ en: "arrange", zh: "安排"},
{ en: "distinguished", zh: "傑出的"},
{ en: "conference", zh: "會議"},
{ en: "math", zh: "數學"},
{ en: "speech", zh: "演說"},
{ en: "heighten", zh: "提高"},
{ en: "affect", zh: "影響"},
{ en: "policeman", zh: "警察"},
{ en: "thief", zh: "賊"},
{ en: "insect", zh: "昆蟲"},
{ en: "tragedy", zh: "悲劇"},
{ en: "degree", zh: "程度"},
{ en: "whistle", zh: "哨子"},
{ en: "shame", zh: "丟臉"},
{ en: "cheat", zh: "欺騙"},
{ en: "firefighters", zh: "消防員"},
{ en: "rushed to", zh: "趕到"},
{ en: "set up", zh: "建立"},
{ en: "lead to", zh: "導致"},
{ en: "put out", zh: "撲滅"},
{ en: "get rid", zh: "擺脫"},
{ en: "consideration", zh: "考慮"},
{ en: "mistake", zh: "錯誤"},
{ en: "more again", zh: "再來一次"},
{ en: "again and again", zh: "一次又一次"},
{ en: "lonely", zh: "孤獨"},
{ en: "bumped", zh: "撞到"},
{ en: "front", zh: "前面"},
{ en: "museum", zh: "博物館"},
{ en: "to allow", zh: "允許"},
{ en: "allow", zh: "准許"},
{ en: "forbid", zh: "禁止"},
{ en: "forbidden", zh: "被禁止"},
{ en: "careful", zh: "小心"},
{ en: "breakthrough", zh: "突破"},
{ en: "to sum up", zh: "總之"},
{ en: "occupied", zh: "佔領（我被事情佔領，表示很忙）"},
{ en: "absolutely", zh: "當然"},
{ en: "suggestion", zh: "建議"},
{ en: "film", zh: "電影"}
];
</script>

    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fffaf0;
        }
        .container {
            background-color: #ffF;
            padding: 10px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #8b4513;
            text-align: center;
        }
        .question {
            font-size: 24px;
            margin-bottom: 20px;
            padding: 15px;
            background-color: #fffacd;
            border-radius: 5px;
            border: 1px solid #e6d8ac;
        }
        .options {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 20px;
        }
        .option {
            padding: 15px;
            background-color:  #FFF878 ;
            border: 1px solid #e6d8ac;
	    color:#000;
            border-radius: 5px;
            cursor: pointer;
            font-size: 24px;
            transition: all 0.3s;
        }
        .option:hover {
            background-color: #f5e6b3;
            transform: translateY(-2px);
        }
        .score {
            text-align: center;
            font-size: 18px;
            margin-bottom: 20px;
            color: #8b4513;
        }
        .controls {
            display: flex;
            justify-content: center;
            gap: 10px;
        }
        button {
            padding: 10px 20px;
            background-color: #FF5084; 
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #b8860b;
        }
        .result {
            text-align: center;
            font-size: 18px;
            margin-top: 20px;
            min-height: 27px;
            padding: 10px;
            background-color: #fffacd;
            border-radius: 5px;
        }
        .correct {
            background-color: #8fbc8f !important;
            color: white;
        }
        .incorrect {
            background-color: #cd5c5c !important;
            color: white;
        }
        .progress-container {
            width: 100%;
            background-color: #f5e6b3;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .progress-bar {
            height: 20px;
            background-color: #d2b48c;
            border-radius: 5px;
            width: 0%;
            transition: width 0.3s;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1><a href="#" onclick="history.back()"><img src="home2.png"></a>英文單字測驗</h1>
        <div class="progress-container">
            <div class="progress-bar" id="progress"></div>
        </div>
        <div class="score" id="score">分數: 0 / 0</div>
        <div class="question" id="question">準備開始測驗...</div>
        <div class="options" id="options">
            <!-- 選項將由JavaScript動態生成 -->
        </div>
        <div class="result" id="result"></div>
        <div class="controls">
            <button id="startBtn">開始測驗</button>
            <button id="nextBtn" style="display:none;" disabled >下一題</button>
        </div>
    </div>



<script>
        // 獲取DOM元素
        const startBtn = document.getElementById('startBtn');
        const nextBtn = document.getElementById('nextBtn');
        const questionEl = document.getElementById('question');
        const optionsEl = document.getElementById('options');
        const resultEl = document.getElementById('result');
        const scoreEl = document.getElementById('score');
        const progressBar = document.getElementById('progress');

        // 測驗變數
        let currentQuestionIndex = 0;
        let score = 0;
        let questions = [];
        let quizActive = false;

        // 開始測驗
        startBtn.addEventListener('click', startQuiz);

        // 下一題
        nextBtn.addEventListener('click', () => {
            currentQuestionIndex++;
            if (currentQuestionIndex < questions.length) {
                showQuestion();
            } else {
                endQuiz();
            }
        });

        // 開始測驗函數 (改為10題)
        function startQuiz() {
            // 重置測驗狀態
            score = 0;

const btn = document.getElementById('startBtn');
btn.style.display =  'none' ;


const nBtn = document.getElementById('nextBtn');
nBtn.style.display ='block' ;

            currentQuestionIndex = 0;
            quizActive = true;
            
            // 打亂單字庫並選擇前10個作為測驗題目
            questions = [...wordDatabase].sort(() => 0.5 - Math.random()).slice(0, 10);
            
            // 更新UI
            startBtn.disabled = true;
            nextBtn.disabled = false;
            resultEl.textContent = '';
            scoreEl.textContent = `分數: ${score} / ${questions.length}`;
            progressBar.style.width = '0%';
            
            // 顯示第一題
            showQuestion();
        }

        // 顯示問題函數
        function showQuestion() {
            if (!quizActive) return;
            
            const question = questions[currentQuestionIndex];
            const options = getRandomOptions(question.en);
            
            // 顯示問題
            questionEl.textContent = `"${question.en}" 的中文意思是什麼？`;
            
            // 顯示選項 (4個選項)
            optionsEl.innerHTML = '';
            options.forEach(option => {
                const button = document.createElement('button');
                button.classList.add('option');
                button.textContent = option.zh;
                button.addEventListener('click', () => selectAnswer(option, button));
                optionsEl.appendChild(button);
            });
            
            // 更新進度條
            progressBar.style.width = `${(currentQuestionIndex / questions.length) * 100}%`;
        }

        // 獲取隨機選項 (包含正確答案共4個)
        function getRandomOptions(correctWord) {
            // 找到正確答案
            const correctAnswer = wordDatabase.find(item => item.en === correctWord);
            
            // 獲取其他隨機單字作為錯誤選項
            let otherWords = wordDatabase.filter(item => item.en !== correctWord);
            otherWords = [...otherWords].sort(() => 0.5 - Math.random()).slice(0, 3); // 取3個錯誤選項
            
            // 組合選項 (共4個)
            const options = [
                { en: correctWord, zh: correctAnswer.zh, isCorrect: true },
                ...otherWords.map(word => ({ en: word.en, zh: word.zh, isCorrect: false }))
            ];
            
            // 打亂選項順序
            return options.sort(() => 0.5 - Math.random());
        }

        // 選擇答案函數 (簡化結果顯示)
        function selectAnswer(selectedOption, selectedButton) {
            if (!quizActive) return;
            
            // 禁用所有選項按鈕
            const allButtons = optionsEl.querySelectorAll('.option');
            allButtons.forEach(button => {
                button.disabled = true;
                // 顯示正確答案
                const isCorrect = button.textContent === questions[currentQuestionIndex].zh;
                if (isCorrect) {
                    button.classList.add('correct');
                }
            });
            
            // 檢查答案
            if (selectedOption.isCorrect) {
                score++;
                resultEl.textContent = `正確！`;
                selectedButton.classList.add('correct');
            } else {
                resultEl.textContent = `錯誤！正確答案是: ${questions[currentQuestionIndex].zh}`;
                selectedButton.classList.add('incorrect');
            }
            
            // 更新分數
            scoreEl.textContent = `分數: ${score} / ${questions.length}`;
            
            // 如果是最後一題，更改按鈕文字
            if (currentQuestionIndex === questions.length - 1) {
                nextBtn.textContent = '查看結果';
            }
            
            // 啟用下一題按鈕
            nextBtn.disabled = false;
        }

        // 結束測驗函數
        function endQuiz() {
            quizActive = false;
            questionEl.textContent = `測驗完成！你的最終分數是 ${score} / ${questions.length}`;
            optionsEl.innerHTML = '';
            resultEl.textContent = '';
            nextBtn.disabled = true;
            nextBtn.textContent = '下一題';

const nBtn = document.getElementById('nextBtn');
nBtn.style.display ='none' ;


const btn = document.getElementById('startBtn');
btn.style.display =  'block';

            startBtn.disabled = false;
            progressBar.style.width = '100%';
        }
</script>
    
</body>
</html>
];
</script>

<style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #fffaf0;
        }
        .container {
            background-color: #F1FF78;
            padding: 10px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #8b4513;
            text-align: center;
        }
        .question {
            font-size: 24px;
            margin-bottom: 20px;
            padding: 15px;
            background-color: #fffacd;
            border-radius: 5px;
            border: 1px solid #e6d8ac;
        }
       .options {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 10px;
            margin-bottom: 20px;
	   grid-template-columns: repeat(4, 1fr);
        }


	@media (max-width: 600px) {
	.options{
	grid-template-columns: repeat(2, 1fr);
	}}
     
        .option {
            padding: 15px;
            background-color:  #FFF878 ;
            border: 1px solid #e6d8ac;
	    color:#000;
            border-radius: 5px;
            cursor: pointer;
            font-size: 20px;
            transition: all 0.3s;
        }
        .option:hover {
            background-color: #f5e6b3;
            transform: translateY(-2px);
        }
        .score {
            text-align: center;
            font-size: 18px;
            margin-bottom: 20px;
            color: #8b4513;
        }
        .controls {
            display: flex;
            justify-content: center;
            gap: 10px;
        }
        button {
            padding: 10px 20px;
            background-color: #FF5084; 
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #b8860b;
        }
        .result {
            text-align: center;
            font-size: 18px;
            margin-top: 20px;
            min-height: 27px;
            padding: 10px;
            background-color: #fffacd;
            border-radius: 5px;
        }
        .correct {
            background-color: #8fbc8f !important;
            color: white;
        }
        .incorrect {
            background-color: #cd5c5c !important;
            color: white;
        }
        .progress-container {
            width: 100%;
            background-color: #f5e6b3;
            border-radius: 5px;
            margin-bottom: 20px;
        }
        .progress-bar {
            height: 20px;
            background-color: #d2b48c;
            border-radius: 5px;
            width: 0%;
            transition: width 0.3s;
        }
    </style>
</head>
<body>
    <div class="container">
	<h1><a href="#" onclick="history.back()"><img src="home2.png"></a>中文選英文測驗</h1>
        <div class="progress-container">
            <div class="progress-bar" id="progress"></div>
        </div>
        <div class="score" id="score">分數: 0 / 0</div>
        <div class="question" id="question">準備開始測驗...</div>
        <div class="options" id="options">
            <!-- 選項將由JavaScript動態生成 -->
        </div>
        <div class="result" id="result"></div>
        <div class="controls">
            <button id="startBtn">開始測驗</button>
            <button id="nextBtn" style="display:none;" disabled >下一題</button>
        </div>
    </div>

<script>

// 獲取DOM元素
const startBtn = document.getElementById('startBtn');
const nextBtn = document.getElementById('nextBtn');
const questionEl = document.getElementById('question');
const optionsEl = document.getElementById('options');
const resultEl = document.getElementById('result');
const scoreEl = document.getElementById('score');
const progressBar = document.getElementById('progress');

// 測驗變數
let currentQuestionIndex = 0;
let score = 0;
let questions = [];
let quizActive = false;

// 開始測驗
startBtn.addEventListener('click', startQuiz);

// 下一題
nextBtn.addEventListener('click', () => {
    currentQuestionIndex++;
    if (currentQuestionIndex < questions.length) {
        showQuestion();
    } else {
        endQuiz();
    }
});

// 開始測驗函數 (改為10題)
function startQuiz() {
    // 重置測驗狀態
    score = 0;

    const btn = document.getElementById('startBtn');
    btn.style.display = 'none';

    const nBtn = document.getElementById('nextBtn');
    nBtn.style.display = 'block';

    currentQuestionIndex = 0;
    quizActive = true;
    
    // 打亂單字庫並選擇前10個作為測驗題目
    questions = [...wordDatabase].sort(() => 0.5 - Math.random()).slice(0, 10);
    
    // 更新UI
    startBtn.disabled = true;
    nextBtn.disabled = false;
    resultEl.textContent = '';
    scoreEl.textContent = `分數: ${score} / ${questions.length}`;
    progressBar.style.width = '0%';
    
    // 顯示第一題
    showQuestion();
}

// 顯示問題函數 (改為顯示中文問題，英文選項)
function showQuestion() {
    if (!quizActive) return;
    
    const question = questions[currentQuestionIndex];
    const options = getRandomOptions(question.zh); // 改為根據中文找英文選項
    
    // 顯示問題 (中文)
    questionEl.textContent = `"${question.zh}" 的英文是什麼？`;
    
    // 顯示選項 (6個英文選項)
    optionsEl.innerHTML = '';
    options.forEach(option => {
        const button = document.createElement('button');
        button.classList.add('option');
        button.textContent = option.en; // 顯示英文選項
        button.addEventListener('click', () => selectAnswer(option, button));
        optionsEl.appendChild(button);
    });
    
    // 更新進度條
    progressBar.style.width = `${(currentQuestionIndex / questions.length) * 100}%`;
}

// 獲取隨機選項 (包含正確答案共6個)
function getRandomOptions(correctZh) {
    // 找到正確答案
    const correctAnswer = wordDatabase.find(item => item.zh === correctZh);
    
    // 獲取其他隨機單字作為錯誤選項
    let otherWords = wordDatabase.filter(item => item.zh !== correctZh);
    otherWords = [...otherWords].sort(() => 0.5 - Math.random()).slice(0, 5); // 取5個錯誤選項
    
    // 組合選項 (共6個)
    const options = [
        { en: correctAnswer.en, zh: correctZh, isCorrect: true },
        ...otherWords.map(word => ({ en: word.en, zh: word.zh, isCorrect: false }))
    ];
    
    // 打亂選項順序
    return options.sort(() => 0.5 - Math.random());
}

// 選擇答案函數 (簡化結果顯示)
function selectAnswer(selectedOption, selectedButton) {
    if (!quizActive) return;
    
    // 禁用所有選項按鈕
    const allButtons = optionsEl.querySelectorAll('.option');
    allButtons.forEach(button => {
        button.disabled = true;
        // 顯示正確答案
        const isCorrect = button.textContent === questions[currentQuestionIndex].en;
        if (isCorrect) {
            button.classList.add('correct');
        }
    });
    
    // 檢查答案
    if (selectedOption.isCorrect) {
        score++;
        resultEl.textContent = `正確！`;
        selectedButton.classList.add('correct');
    } else {
        resultEl.textContent = `錯誤！正確答案是: ${questions[currentQuestionIndex].en}`;
        selectedButton.classList.add('incorrect');
    }
    
    // 更新分數
    scoreEl.textContent = `分數: ${score} / ${questions.length}`;
    
    // 如果是最後一題，更改按鈕文字
    if (currentQuestionIndex === questions.length - 1) {
        nextBtn.textContent = '查看結果';
    }
    
    // 啟用下一題按鈕
    nextBtn.disabled = false;
}

// 結束測驗函數
function endQuiz() {
    quizActive = false;
    questionEl.textContent = `測驗完成！你的最終分數是 ${score} / ${questions.length}`;
    optionsEl.innerHTML = '';
    resultEl.textContent = '';
    nextBtn.disabled = true;
    nextBtn.textContent = '下一題';

    const nBtn = document.getElementById('nextBtn');
    nBtn.style.display = 'none';

    const btn = document.getElementById('startBtn');
    btn.style.display = 'block';

    startBtn.disabled = false;
    progressBar.style.width = '100%';
}
</script>