<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>單字複習遊戲</title>

<script>
  // 英漢詞庫
  const wordPairs = [
{ en: "common", zh: "常見的"},
{ en: "philosophies", zh: "哲學"},
{ en: "typically", zh: "通常"},
{ en: "discussion", zh: "討論"},
{ en: "apportioning", zh: "分配"},
{ en: "benefit", zh: "益處"},
{ en: "received", zh: "已收到"},
{ en: "numbering", zh: "編號"},
{ en: "thousand", zh: "千"},
{ en: "million", zh: "百萬"},
{ en: "billion", zh: "十億"},
{ en: "advised", zh: "建議"},
{ en: "semester", zh: "學期"},
{ en: "branch", zh: "分支"},
{ en: "circulation", zh: "循環"},
{ en: "overflow", zh: "溢出"},
{ en: "waste", zh: "浪費"},
{ en: "against", zh: "反對"},
{ en: "attack", zh: "攻擊"},
{ en: "invading", zh: "入侵"},
{ en: "pathogens", zh: "病原體"},
{ en: "fungi", zh: "真菌"},
{ en: "bacteria", zh: "細菌"},
{ en: "accept", zh: "接受"},
{ en: "defend", zh: "保衛"},
{ en: "quit", zh: "辭職、離開"},
{ en: "feedback", zh: "回饋"},
{ en: "important", zh: "重要的"},
{ en: "technique", zh: "科技"},
{ en: "electronic", zh: "電子的"},
{ en: "industrial", zh: "工業的"},
{ en: "technical", zh: "技術的"},
{ en: "traditional", zh: "傳統的"},
{ en: "annual", zh: "年度的"},
{ en: "festival", zh: "節慶"},
{ en: "celebrating", zh: "慶祝"},
{ en: "writings", zh: "著作"},
{ en: "fireflies", zh: "螢火蟲"},
{ en: "attract", zh: "吸引"},
{ en: "mate", zh: "配偶"},
{ en: "males", zh: "男性"},
{ en: "females", zh: "女性"},
{ en: "signals", zh: "訊號"},
{ en: "communicating", zh: "溝通"},
{ en: "blow", zh: "吹"},
{ en: "darken", zh: "變暗"},
{ en: "fasten", zh: "繫緊"},
{ en: "glow", zh: "發光"},
{ en: "concept", zh: "概念"},
{ en: "complex", zh: "複雜的"},
{ en: "shaped", zh: "形狀"},
{ en: "individual", zh: "個人"},
{ en: "characteristics", zh: "特徵"},
{ en: "dynamics", zh: "動力學"},
{ en: "historical", zh: "歷史"},
{ en: "political", zh: "政治的"},
{ en: "contexts", zh: "情境"},
{ en: "ascendant", zh: "祖先"},
{ en: "identity", zh: "身分"},
{ en: "opposition", zh: "反對"},
{ en: "compilation", zh: "彙編"},
{ en: "analyzes", zh: "分析"},
{ en: "results", zh: "結果"},
{ en: "research", zh: "研究"},
{ en: "belief", zh: "信念"},
{ en: "understanding", zh: "認識、理解力"},
{ en: "website", zh: "網站"},
{ en: "advice", zh: "建議"},
{ en: "attorney", zh: "律師"},
{ en: "different", zh: "不同的"},
{ en: "advices", zh: "建議"},
{ en: "great", zh: "偉大的"},
{ en: "toward", zh: "朝向"},
{ en: "inventions", zh: "發明"},
{ en: "television", zh: "電視"},
{ en: "animal", zh: "動物"},
{ en: "mankind", zh: "人類"},
{ en: "organelle", zh: "細胞器"},
{ en: "vegetable", zh: "蔬菜"},
{ en: "government", zh: "政府"},
{ en: "issues", zh: "發行"},
{ en: "carefully", zh: "小心"},
{ en: "danger", zh: "危險"},
{ en: "voucher", zh: "票券"},
{ en: "vent", zh: "出口、出路"},
{ en: "opportunity", zh: "機會"},
{ en: "showcase", zh: "展示"},
{ en: "talents", zh: "人才"},
{ en: "competition", zh: "競賽"},
{ en: "occupationa", zh: "職業的"},
{ en: "probational", zh: "見習的"},
{ en: "unintentional", zh: "非有意的"},
{ en: "staff", zh: "職員"},
{ en: "referred", zh: "提及"},
{ en: "cells", zh: "牢房"},
{ en: "fields", zh: "場域"},
{ en: "places", zh: "地方"},
{ en: "vacancies", zh: "空缺"},
{ en: "confusions", zh: "困惑"},
{ en: "puzzles", zh: "謎題"},
{ en: "mid-sixteenth", zh: "十六世紀中期"},
{ en: "century", zh: "世紀"},
{ en: "served", zh: "服務"},
{ en: "conveying", zh: "輸送"},
{ en: "coal", zh: "煤炭"},
{ en: "iron", zh: "鐵"},
{ en: "mines", zh: "礦山"},
{ en: "low-lying", zh: "低窪"},
{ en: "coastal", zh: "海岸"},
{ en: "boats", zh: "船隻"},
{ en: "railroad", zh: "鐵路"},
{ en: "trolley", zh: "推車"},
{ en: "wooden cart", zh: "木製手推車"},
{ en: "conduct", zh: "執行"},
{ en: "shortest", zh: "最短"},
{ en: "possible", zh: "可能的"},
{ en: "travelling", zh: "旅行"},
{ en: "several", zh: "一些"},
{ en: "exactly", zh: "確切地"},
{ en: "master", zh: "大師"},
{ en: "prescribe", zh: "規定"},
{ en: "headache", zh: "頭痛"},
{ en: "sheets", zh: "床單"},
{ en: "tablets", zh: "藥片"},
{ en: "trophies", zh: "獎盃"},
{ en: "aspect", zh: "方面"},
{ en: "modern", zh: "現代的"},
{ en: "presence", zh: "現場、現象"},
{ en: "urban", zh: "城市的"},
{ en: "reported", zh: "報告"},
{ en: "international", zh: "國際的"},
{ en: "tolerate", zh: "容忍、寬恕"},
{ en: "unfortunate", zh: "不幸的"},
{ en: "unilluminate", zh: "黯淡無光"},
{ en: "violate", zh: "違反"},
{ en: "application for permission", zh: "許可申請"},
{ en: "crew", zh: "全體人員"},
{ en: "access", zh: "使用權"},
{ en: "addition", zh: "附加"},
{ en: "in addition to", zh: "除了…還有"},
{ en: "furthermore", zh: "另外"},
{ en: "in furthermore", zh: "而且"},
{ en: "newspapers", zh: "報紙"},
{ en: "spell my name right", zh: "名字拼正確"},
{ en: "quotation", zh: "引述"},
{ en: "widely", zh: "廣泛"},
{ en: "cited", zh: "引用"},
{ en: "journalism", zh: "新聞業"},
{ en: "as long as", zh: "只要"},
{ en: "as pity as", zh: "與…一般可憐"},
{ en: "as soon as", zh: "一…就…"},
{ en: "as well as", zh: "也"},
{ en: "angry", zh: "生氣的"},
{ en: "laughed", zh: "笑了"},
{ en: "wrong", zh: "錯誤的"},
{ en: "corresponding", zh: "回應"},
{ en: "diagrams", zh: "圖表"},
{ en: "introductory", zh: "介紹"},
{ en: "continuity", zh: "連續性"},
{ en: "sentence", zh: "句子"},
{ en: "in addition", zh: "此外"},
{ en: "in contrast", zh: "相反地"},
{ en: "in general", zh: "一般來說"},
{ en: "in spite", zh: "儘管"}

  ];        
</script>

<style>
  body {
    font-family: 'Arial', sans-serif;
    background-color: #f5f5f5;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
  }
  
  h1 {
    color: #333;
    margin-bottom: 30px;
  }
  
  .game-container {
    width: 90%;
    max-width: 800px;
    background-color: white;
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  .cards-container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 3px;
    margin-bottom: 30px;
  }

  @media (max-width: 600px) {
    .cards-container {
      grid-template-columns: repeat(2, 1fr);
    }
  }
  
  .card {
    background-color: #87000D;
    font-weight: bold;
    color: white;
    height: 100px;
    border-radius: 8px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 22px;
    cursor: pointer;
    text-align: center;
    padding: 10px;
    position: relative;
  }
  
  .card:hover {
    transform: translateY(-5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
  }
  
  .card.flipped {
    background-color: #ff9a3c;
  }
  
  .result {
    margin-top: 20px;
    font-size: 18px;
    text-align: center;
    min-height: 50px;
  }
  
  .btn {
    background-color: #4CAF50;
    border: none;
    color: white;
    padding: 10px 20px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 16px;
    margin: 10px 2px;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s;
  }
  
  .btn:hover {
    background-color: #45a049;
  }

  .range-btn {
    background-color:#FF5061;
    border: none;
    color: white;
    padding: 8px 15px;
    text-align: center;
    text-decoration: none;
    display: inline-block;
    font-size: 14px;
    cursor: pointer;
    border-radius: 5px;
    transition: background-color 0.3s;
  }

  .range-btn:hover {
    background-color: #5a6268;
  }

  .range-btn.active {
    background-color: #007bff;
  }
  
  .range-buttons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    margin-bottom: 20px;
    gap: 10px;
  }

  .range-buttons > * {
    width: calc(16.66% - 10px);
    min-width: 100px;
    box-sizing: border-box;
  }

  /* 喇叭按鈕 */
  .speaker-btn {
    position: absolute;
    bottom: 5px;
    right: 5px;
    background: rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    width: 25px;
    height: 25px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    cursor: pointer;
    transition: all 0.2s;
  }

  .speaker-btn:hover {
    background: rgba(255, 255, 255, 0.5);
    transform: scale(1.1);
  }

  /* 音效控制按鈕 */
  .sound-control {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background-color: #333;
    color: white;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  }
</style>
</head>
<body>
    <h1><a href="#" onclick="history.back()"><img src="home2.png"></a>單字複習卡</h1>
    
    <div class="game-container">
        <div class="range-buttons" id="rangeButtons"></div>
        <div class="cards-container" id="cardsContainer"></div>
        <div class="result" id="result"></div>
        <button class="btn" id="newGameBtn">新一輪遊戲</button>
    </div>

    <!-- 音效控制按鈕 -->
    <div class="sound-control" id="soundControl">🔊</div>

    <!-- 音效 -->
    <audio id="flipSound" src="02.mp3"></audio>
    <audio id="correctSound" src="01.mp3"></audio>
    <audio id="newGameSound" src="03.mp3"></audio>

    <script>
      // 語音合成函數
      function speakText(text) {
        const utterance = new SpeechSynthesisUtterance(text);
        utterance.lang = "en-US"; // 可改成 "en-GB" 聽英式口音
        speechSynthesis.speak(utterance);
      }

      let selectedWords = [];
      let cards = [];
      let flippedCard = null;
      let soundEnabled = true;
      let currentRange = null;
      
      const cardsContainer = document.getElementById('cardsContainer');
      const resultDiv = document.getElementById('result');
      const newGameBtn = document.getElementById('newGameBtn');
      const soundControl = document.getElementById('soundControl');
      const rangeButtons = document.getElementById('rangeButtons');
      const flipSound = document.getElementById('flipSound');
      const correctSound = document.getElementById('correctSound');
      const newGameSound = document.getElementById('newGameSound');
      
      // 初始化範圍選擇按鈕
      function initRangeButtons() {
        rangeButtons.innerHTML = '';
        
        // 計算需要多少個範圍按鈕（每10個一組）
        const rangeCount = Math.ceil(wordPairs.length / 10);
        
        for (let i = 0; i < rangeCount; i++) {
          const start = i * 10 + 1;
          const end = Math.min((i + 1) * 10, wordPairs.length);
          
          const btn = document.createElement('button');
          btn.className = 'range-btn';
          btn.textContent = `${start}-${end}`;
          btn.dataset.start = i * 10;
          btn.dataset.end = end;
          
          btn.addEventListener('click', () => {
            // 移除所有按鈕的active類
            document.querySelectorAll('.range-btn').forEach(b => {
              b.classList.remove('active');
            });
            // 為當前按鈕添加active類
            btn.classList.add('active');
            
            // 設置當前範圍
            currentRange = {
              start: parseInt(btn.dataset.start),
              end: parseInt(btn.dataset.end)
            };
            
            // 初始化遊戲
            initGame();
          });
          
          rangeButtons.appendChild(btn);
        }
        
        // 默認選擇第一個範圍
        if (rangeButtons.firstChild) {
          rangeButtons.firstChild.click();
        }
      }
      
      // 初始化遊戲
      function initGame() {
        // 如果沒有選擇範圍，使用全部單詞
        let wordsToUse = wordPairs;
        
        if (currentRange) {
          wordsToUse = wordPairs.slice(currentRange.start, currentRange.end);
        }
        
        // 播放新遊戲音效
        if (soundEnabled) {
          newGameSound.currentTime = 0;
          newGameSound.play();
        }
        
        // 清空容器
        cardsContainer.innerHTML = '';
        resultDiv.textContent = '';
        
        // 隨機選擇6個單詞（如果範圍內有足夠的單詞）
        const numWordsToSelect = Math.min(8, wordsToUse.length);
        selectedWords = [...wordsToUse]
          .sort(() => 0.5 - Math.random())
          .slice(0, numWordsToSelect);
        
        // 創建卡片
        cards = selectedWords.map(word => {
          const card = document.createElement('div');
          card.className = 'card';
          card.textContent = word.en;
          card.dataset.en = word.en;
          card.dataset.zh = word.zh;
          
          // 添加喇叭按鈕
          const speakerBtn = document.createElement('div');
          speakerBtn.className = 'speaker-btn';
          speakerBtn.innerHTML = '🔊';
          speakerBtn.addEventListener('click', (e) => {
            e.stopPropagation(); // 防止觸發卡片翻轉
            speakText(word.en); // 使用您提供的speakText函數
          });
          
          card.appendChild(speakerBtn);
          card.addEventListener('click', flipCard);
          
          cardsContainer.appendChild(card);
          return card;
        });
      }



// 翻轉卡片
function flipCard() {
    // 如果已經翻轉或是同一張卡片，則不做任何事
    if (this === flippedCard || this.classList.contains('flipped')) {
        return;
    }
    
    // 播放翻牌音效
    if (soundEnabled) {
        flipSound.currentTime = 0;
        flipSound.play();
    }
    
    // 翻轉卡片
    this.classList.add('flipped');
    
    // 保存原始內容（英文和喇叭按鈕）
    const originalContent = this.innerHTML;
    this.dataset.originalContent = originalContent;
    
    // 設置中文內容，但保留喇叭按鈕
    const speakerBtn = this.querySelector('.speaker-btn') ? this.querySelector('.speaker-btn').outerHTML : '';
    this.innerHTML = this.dataset.zh + speakerBtn;
    
    // 重新綁定喇叭按鈕的事件
    const newSpeakerBtn = this.querySelector('.speaker-btn');
    if (newSpeakerBtn) {
        newSpeakerBtn.addEventListener('click', (e) => {
            e.stopPropagation();
            speakText(this.dataset.en);
        });
    }
    
    // 顯示結果
    resultDiv.textContent = `${this.dataset.en} 的中文意思是 ${this.dataset.zh}`;
    
    // 播放答對音效
    if (soundEnabled) {
        correctSound.currentTime = 0;
        correctSound.play();
    }
    
    // 如果之前有翻轉的卡片，翻回去
    if (flippedCard) {
        setTimeout(() => {
            flippedCard.classList.remove('flipped');
            flippedCard.innerHTML = flippedCard.dataset.originalContent;
            // 重新綁定喇叭按鈕的事件
            const originalSpeakerBtn = flippedCard.querySelector('.speaker-btn');
            if (originalSpeakerBtn) {
                originalSpeakerBtn.addEventListener('click', (e) => {
                    e.stopPropagation();
                    speakText(flippedCard.dataset.en);
                });
            }
            flippedCard = null;
        }, 3000); // 3秒後翻回
    }
    
    // 保存當前翻轉的卡片
    flippedCard = this;
    
    // 3秒後自動翻回
    setTimeout(() => {
        if (this.classList.contains('flipped')) {
            this.classList.remove('flipped');
            this.innerHTML = this.dataset.originalContent;
            // 重新綁定喇叭按鈕的事件
            const originalSpeakerBtn = this.querySelector('.speaker-btn');
            if (originalSpeakerBtn) {
                originalSpeakerBtn.addEventListener('click', (e) => {
                    e.stopPropagation();
                    speakText(this.dataset.en);
                });
            }
            if (flippedCard === this) {
                flippedCard = null;
            }
        }
    }, 3000);
}

      
      // 新遊戲按鈕
      newGameBtn.addEventListener('click', initGame);
      
      // 音效控制
      soundControl.addEventListener('click', () => {
        soundEnabled = !soundEnabled;
        soundControl.textContent = soundEnabled ? '🔊' : '🔇';
      });
      
      // 初始化範圍按鈕和遊戲
      initRangeButtons();
    </script>
</body>
</html>